/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0 -1 -1)
    (20 -1 -1)
    (20 1 -1)
    (0 1 -1)
    (0 -1 1)
    (20 -1 1)
    (20 1 1)
    (0 1 1)
);

blocks

(
    hex (0 1 2 3 4 5 6 7) (200 40 124)
    simpleGrading
    (1                      // x grading
    (                       // y grading
        (0.5 0.5 5)        // 50% of geometry, 50% of cells, expansion ratio 10
        (0.5 0.5 0.2)       // 50% of geometry, 50% of cells, expansion ratio 0.1
    )
    (                       // z grading
        (0.5 0.5 6)        // 50% of geometry, 50% of cells, expansion ratio 10
        (0.5 0.5 0.16666667)       // 50% of geometry, 50% of cells, expansion ratio 0.1
    ))
);

edges
(
);

boundary
(
    topWall
    {
        type            mappedWall;
        sampleMode      nearestPatchFace;
        sampleRegion    walls;
        samplePatch     botWall;
        faces
        (
            (4 5 6 7)
        );
    }
    
    botWall
    {
        type regionCouple;

        type            mappedWall;
        sampleMode      nearestPatchFace;
        sampleRegion    walls;
        samplePatch     topWall;
        faces
        (
            (0 1 2 3)
        );
    }
    
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    
    outlet
    {
        type patch;
        faces
        (
            (1 5 6 2)
        );
    }
    
     frontWall
    {
        type wall;
        faces
        (
            (0 1 5 4)
        );
    }
     
     backWall
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }
	    
);

mergePatchPairs
(
);


// ************************************************************************* //
